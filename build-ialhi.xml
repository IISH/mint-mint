<project xmlns:ivy="antlib:org.apache.ivy.ant" name="mint" default="dist" basedir=".">
	<description>
  		Mint build file for debug
	 </description>

    <property name="tomcat.home" location="/path_to/apache-tomcat-8.0.33" />
    <property name="ant.home" location="/path_to/ant-1.8.4"/>

    <!-- IVY INSTALL -->
    <property name="ivy.install.version" value="2.4.0" />
    <condition property="ivy.home" value="${ant.home}">
        <isset property="env.IVY_HOME" />
    </condition>
    <property name="ivy.home" value="${user.home}/.ant" />
    <property name="ivy.jar.dir" value="${ivy.home}/lib" />
    <property name="ivy.jar.file" value="${ivy.jar.dir}/ivy.jar" />

    <target name="download-ivy" unless="offline">

        <mkdir dir="${ivy.jar.dir}"/>
        <!-- download Ivy from web site so that it can be used even without any special installation -->
        <get src="http://repo2.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar"
             dest="${ivy.jar.file}" usetimestamp="true"/>
    </target>

    <target name="init-ivy" depends="download-ivy">
        <!-- try to load ivy here from ivy home, in case the user has not already dropped
                it into ant's lib dir (note that the latter copy will always take precedence).
                We will not fail as long as local lib dir exists (it may be empty) and
                ivy is in at least one of ant's lib dir or the local lib dir. -->
        <path id="ivy.lib.path">
            <fileset dir="${ivy.jar.dir}" includes="*.jar"/>
        </path>
        <taskdef resource="org/apache/ivy/ant/antlib.xml"
                 uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>
    </target>
    <!-- IVY install end -->

    <!-- TOMCAT reload -->
    <import file="${tomcat.home}/bin/catalina-tasks.xml"/>

    <property name="url"      value="http://localhost:8080/manager/text"/>
    <property name="username" value="ialhi"/>
    <property name="password" value="ialhi@mint12345"/>

    <target name="reload" description="Reload web application">
        <reload  url="${url}" username="${username}" password="${password}"
                 path="/mint"/>
    </target>
    <!-- TOMCAT reload end -->

    <property name="classpath" location="."/>
    <property name="custom" value="ialhi"/>
    <property name="appname" value="mint" />
    <property name="deploy-target" value="ialhi@localhost"/>

    <!-- set global properties for this build -->
	<property name="src" location="WEB-INF/src/java"/>
	<property name="custom-src" location="WEB-INF/custom/${custom}/java"/>
	
	<property name="build" location="WEB-INF/classes"/>
	<property name="lib" location="WEB-INF/lib"/>

	<property name="ivy.settings.file" location="ivysettings.xml" />
    <property name="dist"  location="${tomcat.home}/webapps"/>

    <path id="srcpath" >
		<dirset dir="${src}" />
		<dirset dir="WEB-INF/custom">
			<include name="${custom}/java" if="custom" />
		</dirset>
	</path>
	<property name="allSrc" refid="srcpath"/>

	<target name="init" depends="resolve" >
		<fail unless="appname" message="Please call ant with -Dappname=something. This is used as subdir in dist and for tomcat deploy." />
		<!-- Create the time stamp -->
		<tstamp/>
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${build}"/>
	</target>
	
	<target name="resolve" description="--> retrieve dependencies with ivy">
		<ivy:retrieve pattern="${lib}/[artifact]-[type]-[revision].[ext]" type="jar,bundle,javadoc" />
		<!-- copy unmanaged_libs into lib-->
		<copy todir="${lib}">
			<fileset dir="WEB-INF/unmanaged_lib" />
		</copy>
	 </target>
		
	<target name="compile" depends="init"
        description="compile the source " >
		<echo message="Compiling source code..." />
		<!-- Compile the java code from ${src} into ${build} -->
		<javac destdir="${build}" 
			encoding = "utf-8"
			source="1.8" debug="true" debuglevel="lines,vars,source" 
			includeAntRuntime="no" srcdir="${allSrc}" >
			<classpath>
				<pathelement path="${classpath}"/>
				<fileset dir="WEB-INF/lib">
					<include name="**/*.jar"/>
				</fileset>
				<fileset dir="${tomcat.home}/lib">
					<include name="**/*.jar"/>
				</fileset>
			</classpath>
		</javac>
		<echo message="Source code compile completed!" />
		<copy todir="${build}">
		    <fileset dir="${src}"
		             excludes="**/*.java" />
		</copy>	
		<copy todir="${build}" flatten="true" >
		    <fileset dir="WEB-INF/custom" >
		    	<include name="${custom}/java/*" if="custom"/>
		        <exclude name="**/*.java" />
		    </fileset>
		</copy>
		<echo message="Resources copied to class folder." />
	</target>

	<target name="instrument" depends="compile">
	    <echo message="Instrumenting domain..." />
	    <taskdef name="instrument" classname="org.hibernate.tool.instrument.javassist.InstrumentTask">
	        <classpath >
			<fileset dir="${lib}">
				<include name="**/*.jar"/>
			</fileset>
	        </classpath>	
	        <classpath path="${build}"/>
	    </taskdef>

	    <instrument verbose="true">
	        <fileset dir="${build}/gr/ntua/ivml/mint/persistent">
	            <include name="Mapping.class"/>
	        </fileset>
	    </instrument>
	</target>

	<target name="properties" depends="init" description="Build a build.properties file" >
		<tstamp>
		    <format property="NOW" pattern="d-MMM-yyyy HH:mm:ss" locale="en,UK"/>
		  </tstamp>
		<echo file="build.properties" message="git-SHA1=" />
		<exec executable="git" output="build.properties" append="true">
			<arg value="rev-parse"/>
			<arg value="--verify"/>
			<arg value="HEAD"/>
		</exec>
		
		<echo file="build.properties" append="true" >appname=${appname}
deploy_target=${deploy_target}
build-time=${NOW}</echo>
	</target>
	
	<target name="dist" depends="dist_base, dist_custom" />

	<target name="dist_custom" depends="dist_base" if="custom" >
		<echo message="Copying custom resources..." />
		<copy todir="${dist}/${appname}/custom/${custom}">
			<fileset dir="custom/${custom}" />
		</copy>
	</target>
		
	<target name="dist_base" depends="instrument, properties"
        description="generate the distribution" >
		<echo message="Generating distribution..." />
		<mkdir dir="${dist}/${appname}"/>
		<echo message="Copying css..." />
		<copy todir="${dist}/${appname}/css">
			<fileset dir="css" />
		</copy>
		<echo message="Copying template..." />
		<copy todir="${dist}/${appname}/template" >
			<fileset dir="template" />
		</copy>
		<echo message="Copying images..." />
		<copy todir="${dist}/${appname}/images" >
			<fileset dir="images" />
		</copy>
		<echo message="Copying js..." />
		<copy todir="${dist}/${appname}/js">
			<fileset dir="js" />
		</copy>
		<echo message="Copying schemas..." />
		<copy todir="${dist}/${appname}/schemas">
			<fileset dir="schemas" />
		</copy>
		<echo message="Copying xsl..." />
		<copy todir="${dist}/${appname}/xsl">
			<fileset dir="xsl" />
		</copy>
		<echo message="Copying scripts..." />
		<copy todir="${dist}/${appname}/scripts">
			<fileset dir="scripts" />
		</copy>
		<echo message="Copying views..." />
		<copy todir="${dist}/${appname}/views">
			<fileset dir="views" />
		</copy>
		<echo message="Copying WEB-INF..." />
		<copy todir="${dist}/${appname}/WEB-INF">
			<fileset dir="WEB-INF" />
		</copy>
		<echo message="Copying index.html..." />
		<copy tofile="${dist}/${appname}/index.html" file="index.html"/>
		<copy tofile="${dist}/${appname}/build.properties" file="build.properties"/>
	</target>

	<target name="clean"
        description="clean up" >
		<delete  failonerror="false"> 
			<fileset dir="${lib}" includes="*/**" erroronmissingdir="false" /> 
			<fileset dir="${build}" includes="*/**"  erroronmissingdir="false"/> 
			<fileset dir="${dist}" includes="*/**" erroronmissingdir="false"/> 
		</delete>
	</target>

	<import file="WEB-INF/deploy/${deploy-target}/deploy.xml" optional="true" />
	
	<target name="modify" depends="dist" >
		<antcall target="modify-specific"/>
	</target>
	
	<target name="deploy" depends="init-ivy, modify, dist" if="deploy_target">
        <antcall target="deploy-specific"/>
    </target>

	<target name="jar" depends="modify, dist" if="deploy_target" >
		<jar destfile="${dist}/${appname}.jar">
		  <fileset dir="${dist}/${appname}/WEB-INF" includes="lib/" />
		  <fileset dir="${dist}/${appname}/WEB-INF/classes" excludes="**/*jsp" />
	      <fileset dir="${dist}/${appname}" includes="build.properties" />
		</jar>
	</target>
	
    <target name="doc">
       <javadoc destdir="docs/mint2" 
                sourcepath="WEB-INF/src/java"
                packagenames="gr.ntua.ivml.mint.*"
                windowtitle="Mint2 Javadoc">
		<classpath>
			<pathelement path="${classpath}"/>
                        <fileset dir="WEB-INF/lib">
                        	<include name="**/*.jar"/>
                        </fileset>
		</classpath>
	</javadoc>
    </target>
</project>
